Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8bae5496-7b87-4fa4-86b2-6b26cc4de4cb\" name=\"Changes\" comment=\"Modified Main class:&#10;- Added a welcome page&#10;- Added comments for every functions and complex codes for other members to understand while coding since this will be merged to main branch.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/santorini/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/santorini/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/santorini/elements/GodCard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/santorini/elements/GodCard.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/santorini/elements/Worker.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/santorini/elements/Worker.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/santorini/engine/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/santorini/engine/Game.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/santorini/engine/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/santorini/engine/Player.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitLabMergeRequestFiltersHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPENED&quot;,\r\n    &quot;assignee&quot;: {\r\n      &quot;type&quot;: &quot;org.jetbrains.plugins.gitlab.mergerequest.ui.filters.GitLabMergeRequestsFiltersValue.MergeRequestsMemberFilterValue.MergeRequestsAssigneeFilterValue&quot;,\r\n      &quot;username&quot;: &quot;vngu0096&quot;,\r\n      &quot;fullname&quot;: &quot;Nguyen Viet Phuc&quot;\r\n    }\r\n  }\r\n}</component>\r\n  <component name=\"GitLabMergeRequestsSettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;first&quot;: &quot;https://git.infotech.monash.edu/FIT3077/fit3077-s1-2025/assignment-groups/CL_Tuesday04pm_Team063/project.git&quot;,\r\n    &quot;second&quot;: &quot;689acd6c-12be-40b8-820c-b74bd3e34dc2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vLuCCAZfRW1IW9TVJU9OBAQd0K\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Guess.executor\": \"Run\",\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"MainGameLogic\",\r\n    \"kotlin-language-version-configured\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"Removed Viet Nguyen sammple Java Project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743765444294</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743765444294</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Delete the file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743766039147</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743766039147</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Added a testing file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1743766086556</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1743766086556</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8bae5496-7b87-4fa4-86b2-6b26cc4de4cb\" name=\"Changes\" comment=\"Added a testing file\" />\r\n      <created>1743936549643</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1743936549643</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Modified Main class:&#10;- Added 2 players prompts&#10;- Display the names input and the welcome windows.&#10;- Display the template UI.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745061538442</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745061538442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Updated Main class:&#10;- Made the Game GUI displays the first player's turn with their god card selected&#10;- Generated sample titles and descriptions to follow the domain model design main page.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745063726155</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745063726155</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Modified Main class:&#10;- Added a welcome page&#10;- Added comments for every functions and complex codes for other members to understand while coding since this will be merged to main branch.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1745142732702</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1745142732702</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Merged main into Viet-Nguyen-branch\" />\r\n    <MESSAGE value=\"Removed Viet Nguyen sammple Java Project\" />\r\n    <MESSAGE value=\"Re-committed the sample project.\" />\r\n    <MESSAGE value=\"Delete the file\" />\r\n    <MESSAGE value=\"Added a testing file\" />\r\n    <MESSAGE value=\"Pushed workspace.xml file\" />\r\n    <MESSAGE value=\"Modified Main class:&#10;- Added 2 players prompts&#10;- Display the names input and the welcome windows.&#10;- Display the template UI.\" />\r\n    <MESSAGE value=\"Updated Main class:&#10;- Made the Game GUI displays the first player's turn with their god card selected&#10;- Generated sample titles and descriptions to follow the domain model design main page.\" />\r\n    <MESSAGE value=\"Modified Main class:&#10;- Added a welcome page&#10;- Added comments for every functions and complex codes for other members to understand while coding since this will be merged to main branch.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Modified Main class:&#10;- Added a welcome page&#10;- Added comments for every functions and complex codes for other members to understand while coding since this will be merged to main branch.\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f907f6830a40ed286d80b190d382872bc90e3cc7)
+++ b/.idea/workspace.xml	(date 1745660974760)
@@ -5,12 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="8bae5496-7b87-4fa4-86b2-6b26cc4de4cb" name="Changes" comment="Modified Main class:&#10;- Added a welcome page&#10;- Added comments for every functions and complex codes for other members to understand while coding since this will be merged to main branch.">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/santorini/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/santorini/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/santorini/elements/GodCard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/santorini/elements/GodCard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/santorini/elements/Worker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/santorini/elements/Worker.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/santorini/engine/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/santorini/engine/Game.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/santorini/engine/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/santorini/engine/Player.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/santorini/elements/GodCard.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,7 +22,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="main" />
+        <entry key="$PROJECT_DIR$" value="GodCardEntity" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -68,7 +63,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "MainGameLogic",
+    "git-widget-placeholder": "Merging main",
     "kotlin-language-version-configured": "true"
   }
 }]]></component>
Index: src/santorini/godcards/GodCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/santorini/godcards/GodCard.java b/src/santorini/godcards/GodCard.java
new file mode 100644
--- /dev/null	(date 1745660835282)
+++ b/src/santorini/godcards/GodCard.java	(date 1745660835282)
@@ -0,0 +1,63 @@
+package santorini.godcards;
+import santorini.elements.Worker;
+import santorini.engine.Player;
+import santorini.board.Cell;
+
+import java.util.List;
+
+//Abstract class GodCard
+public abstract class GodCard {
+    private String name;
+    private String description;
+    private Player player;
+
+    public GodCard(String name, String description)
+    {
+        this.name = name;
+        this.description = description;
+        this.player = player;
+    }
+
+    public String getName() {
+        return name;
+    }
+    public String getDescription() {
+        return description;
+    }
+    public Player getPlayer() {
+        return player;
+    }
+
+    //Develop for Sprint3
+    /*public void applyEffect()
+     {
+
+     }*/
+    public void onTurnStart()
+    {
+
+    }
+
+    public void onTurnEnd()
+    {
+
+    }
+    /**
+     * Modify the available movement options for a worker.
+     * @param worker The worker trying to move.
+     * @param defaultOptions The default movement options.
+     * @return The modified list of movement options.
+     */
+    public List<Cell> modifyMoveOptions(Worker worker, List<Cell> defaultOptions) {
+        return defaultOptions;
+    }
+    /**
+     * Modify the available movement options for a worker.
+     * @param worker The worker trying to move.
+     * @param defaultOptions The default building options.
+     * @return The modified list of available build options.
+     */
+    public List<Cell> modifyBuildOptions(Worker worker, List<Cell> defaultOptions) {
+        return defaultOptions;
+    }
+}
Index: src/santorini/elements/GodCardFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/santorini/elements/GodCardFrame.java b/src/santorini/elements/GodCardFrame.java
new file mode 100644
--- /dev/null	(date 1745660835281)
+++ b/src/santorini/elements/GodCardFrame.java	(date 1745660835281)
@@ -0,0 +1,78 @@
+package santorini.elements;
+
+import santorini.elements.ArtemisGod;
+import santorini.elements.GodCard;
+import santorini.engine.Player;
+
+import javax.swing.*;
+import java.awt.*;
+
+public class GodCardFrame extends JFrame {
+    private JLabel nameLabel;
+    private JLabel descriptionLabel;
+    private JLabel godCardImage;
+
+    // Constructor that takes a GodCard object and displays its information
+    public GodCardFrame(GodCard godCard) {
+        // Initialize the frame
+        setTitle("GodCard: " + godCard.getName());
+        setSize(400, 300);
+        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
+        setLocationRelativeTo(null);
+
+        // Set layout for the panel
+        setLayout(new BorderLayout());
+
+        // Name label (displays the name of the GodCard)
+        nameLabel = new JLabel("Name: " + godCard.getName(), SwingConstants.CENTER);
+        nameLabel.setFont(new Font("Arial", Font.BOLD, 16));
+
+        // Description label (displays the description of the GodCard)
+        descriptionLabel = new JLabel("Description: " + godCard.getDescription(), SwingConstants.CENTER);
+
+        // Image label (displays the GodCard image)
+        godCardImage = new JLabel();
+        godCardImage.setHorizontalAlignment(SwingConstants.CENTER);
+
+        // Fetch the image filename from the map using the GodCard name
+        String imageFilename = getGodCardImage(godCard.getName());
+        if (imageFilename != null) {
+            // Load the image using the filename (assuming images are in "path_to_images" folder)
+            ImageIcon icon = new ImageIcon("path_to_images/" + imageFilename);
+            godCardImage.setIcon(icon);
+        } else {
+            // Fallback if image is not found in the map
+            godCardImage.setText("Image not found");
+        }
+
+        // Add the components to the frame
+        add(nameLabel, BorderLayout.NORTH);
+        add(descriptionLabel, BorderLayout.CENTER);
+        add(godCardImage, BorderLayout.SOUTH);
+    }
+
+    // A simple method to fetch the image filename based on the GodCard's name
+    private String getGodCardImage(String cardName) {
+        switch (cardName) {
+            case "Artemis":
+                return "artemis.png";
+            case "Apollo":
+                return "apollo.png";
+            // Add other cases for different GodCards as needed
+            default:
+                return null;
+        }
+    }
+
+    // Main method to test the frame with a sample GodCard (like Artemis)
+    public static void main(String[] args) {
+        // Example of creating a GodCard for Artemis
+        //Player player = new Player("Player 1"); // Dummy player, replace as needed
+        GodCard artemisCard = new ArtemisGod(); // ArtemisGodCard
+
+        // Display the GodCard in the frame
+        GodCardFrame frame = new GodCardFrame(artemisCard);
+        frame.setVisible(true);
+    }
+}
+
Index: src/santorini/godcards/ArtemisGod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/santorini/godcards/ArtemisGod.java b/src/santorini/godcards/ArtemisGod.java
new file mode 100644
--- /dev/null	(date 1745660835281)
+++ b/src/santorini/godcards/ArtemisGod.java	(date 1745660835281)
@@ -0,0 +1,52 @@
+package santorini.godcards;
+
+import santorini.board.Cell;
+import santorini.elements.Worker;
+
+import java.util.List;
+import java.util.ArrayList;
+
+public class ArtemisGod extends GodCard {
+    private Cell firstMoveCell;
+    private boolean isSecondMove = false;
+
+    public ArtemisGod() {
+        super("Artemis", "Your Worker may move one additional time, but not back to the initial space.");
+    }
+    @Override
+    public void onTurnStart() {
+        // Setup for Artemis at the beginning of the turn
+        super.onTurnStart();
+        firstMoveCell = null;
+        isSecondMove = false;
+    }
+
+    public void setFirstMoveCell(Cell cell)
+    {
+        this.firstMoveCell = cell;
+        this.isSecondMove = true;
+    }
+
+    @Override
+    public List<Cell> modifyMoveOptions(Worker worker, List<Cell> defaultOptions) {
+        if (isSecondMove && firstMoveCell != null) {
+            List<Cell> modified = new ArrayList<>(defaultOptions);
+            modified.removeIf(cell -> cell.equals(firstMoveCell)); // Prevent moving back to the initial space
+            return modified;
+        }
+        return defaultOptions; // If it's the first move, use default options}    }
+    }
+    @Override
+    public List<Cell> modifyBuildOptions(Worker worker, List<Cell> defaultOptions) {
+        return defaultOptions; // Artemis does not affect building options
+    }
+
+    @Override
+    public void onTurnEnd() {
+        // Clean up after the turn ends
+        super.onTurnEnd();
+        firstMoveCell = null;
+        isSecondMove = false;
+    }
+
+}
Index: src/santorini/godcards/DemeterGod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/santorini/godcards/DemeterGod.java b/src/santorini/godcards/DemeterGod.java
new file mode 100644
--- /dev/null	(date 1745660835282)
+++ b/src/santorini/godcards/DemeterGod.java	(date 1745660835282)
@@ -0,0 +1,45 @@
+package santorini.godcards;
+
+import santorini.board.Cell;
+import santorini.elements.Worker;
+
+import java.util.List;
+import java.util.ArrayList;
+
+public class DemeterGod extends GodCard {
+    private boolean isFirstBuild = true;
+
+    public DemeterGod() {
+        super("Demeter", "Your Worker may build one additional time, but not on the same space.");
+    }
+
+    @Override
+    public void onTurnStart() {
+        // Setup for Demeter at the beginning of the turn
+        super.onTurnStart();
+        isFirstBuild = true;
+    }
+
+    @Override
+    public List<Cell> modifyMoveOptions(Worker worker, List<Cell> defaultOptions) {
+        return defaultOptions; // Demeter does not affect movement options
+    }
+
+    @Override
+    public List<Cell> modifyBuildOptions(Worker worker, List<Cell> defaultOptions) {
+        if (isFirstBuild) {
+            return defaultOptions; // For the first build, use the default options
+        } else {
+            // For the second build, allow building on the same space
+            List<Cell> modified = new ArrayList<>(defaultOptions);
+            return modified;
+        }
+    }
+
+    @Override
+    public void onTurnEnd() {
+        // Clean up after the turn ends
+        super.onTurnEnd();
+        isFirstBuild = false; // Demeter allows the second build only after the first turn
+    }
+}
\ No newline at end of file
